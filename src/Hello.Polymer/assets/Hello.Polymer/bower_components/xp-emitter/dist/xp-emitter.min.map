{"version":3,"sources":["../../../../usr/lib/node_modules/browserify/node_modules/browser-pack/_prelude.js","index","lib/index.js","node_modules/eventemitter3/index.js"],"names":["global","eventemitter3","require","XP","module","exports","XPEmitter","Class","extends","window","EE","fn","context","once","this","EventEmitter","prefix","Object","create","prototype","_events","undefined","listeners","event","exists","evt","available","i","l","length","ee","Array","emit","a1","a2","a3","a4","a5","args","len","arguments","removeListener","call","apply","j","on","listener","push","events","removeAllListeners","off","addListener","setMaxListeners","prefixed"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports=require(\"./lib\");","/*jslint browser: true, devel: true, node: true, ass: true, nomen: true, unparam: true, indent: 4 */\r\n\r\n/**\r\n * @license\r\n * Copyright (c) 2015 The ExpandJS authors. All rights reserved.\r\n * This code may only be used under the BSD style license found at https://expandjs.github.io/LICENSE.txt\r\n * The complete set of authors may be found at https://expandjs.github.io/AUTHORS.txt\r\n * The complete set of contributors may be found at https://expandjs.github.io/CONTRIBUTORS.txt\r\n */\r\n(function (global) {\r\n    \"use strict\";\r\n\r\n    // Vars\r\n    var eventemitter3 = require('eventemitter3'),\r\n        XP            = global.XP || require('expandjs');\r\n\r\n    /*********************************************************************/\r\n\r\n    /**\r\n     * This class is used to provide event emitting functionalities.\r\n     *\r\n     * @class XPEmitter\r\n     * @description This class is used to provide event emitting functionalities\r\n     */\r\n    module.exports = global.XPEmitter = new XP.Class('XPEmitter', {\r\n\r\n        // EXTENDS\r\n        extends: eventemitter3\r\n    });\r\n\r\n}(typeof window !== \"undefined\" ? window : global));","'use strict';\n\n//\n// We store our EE objects in a plain object whose properties are event names.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// `~` to make sure that the built-in object properties are not overridden or\n// used as an attack vector.\n// We also assume that `Object.create(null)` is available when the event name\n// is an ES6 Symbol.\n//\nvar prefix = typeof Object.create !== 'function' ? '~' : false;\n\n/**\n * Representation of a single EventEmitter function.\n *\n * @param {Function} fn Event handler to be called.\n * @param {Mixed} context Context for function execution.\n * @param {Boolean} once Only emit once\n * @api private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Minimal EventEmitter interface that is molded against the Node.js\n * EventEmitter interface.\n *\n * @constructor\n * @api public\n */\nfunction EventEmitter() { /* Nothing to set */ }\n\n/**\n * Holds the assigned EventEmitters by name.\n *\n * @type {Object}\n * @private\n */\nEventEmitter.prototype._events = undefined;\n\n/**\n * Return a list of assigned event listeners.\n *\n * @param {String} event The events that should be listed.\n * @param {Boolean} exists We only need to know if there are listeners.\n * @returns {Array|Boolean}\n * @api public\n */\nEventEmitter.prototype.listeners = function listeners(event, exists) {\n  var evt = prefix ? prefix + event : event\n    , available = this._events && this._events[evt];\n\n  if (exists) return !!available;\n  if (!available) return [];\n  if (available.fn) return [available.fn];\n\n  for (var i = 0, l = available.length, ee = new Array(l); i < l; i++) {\n    ee[i] = available[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Emit an event to all registered event listeners.\n *\n * @param {String} event The name of the event.\n * @returns {Boolean} Indication if we've emitted an event.\n * @api public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events || !this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if ('function' === typeof listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Register a new EventListener for the given event.\n *\n * @param {String} event Name of the event.\n * @param {Functon} fn Callback function.\n * @param {Mixed} context The context of the function.\n * @api public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  var listener = new EE(fn, context || this)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events) this._events = prefix ? {} : Object.create(null);\n  if (!this._events[evt]) this._events[evt] = listener;\n  else {\n    if (!this._events[evt].fn) this._events[evt].push(listener);\n    else this._events[evt] = [\n      this._events[evt], listener\n    ];\n  }\n\n  return this;\n};\n\n/**\n * Add an EventListener that's only called once.\n *\n * @param {String} event Name of the event.\n * @param {Function} fn Callback function.\n * @param {Mixed} context The context of the function.\n * @api public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  var listener = new EE(fn, context || this, true)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events) this._events = prefix ? {} : Object.create(null);\n  if (!this._events[evt]) this._events[evt] = listener;\n  else {\n    if (!this._events[evt].fn) this._events[evt].push(listener);\n    else this._events[evt] = [\n      this._events[evt], listener\n    ];\n  }\n\n  return this;\n};\n\n/**\n * Remove event listeners.\n *\n * @param {String} event The event we want to remove.\n * @param {Function} fn The listener that we need to find.\n * @param {Mixed} context Only remove listeners matching this context.\n * @param {Boolean} once Only remove once listeners.\n * @api public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events || !this._events[evt]) return this;\n\n  var listeners = this._events[evt]\n    , events = [];\n\n  if (fn) {\n    if (listeners.fn) {\n      if (\n           listeners.fn !== fn\n        || (once && !listeners.once)\n        || (context && listeners.context !== context)\n      ) {\n        events.push(listeners);\n      }\n    } else {\n      for (var i = 0, length = listeners.length; i < length; i++) {\n        if (\n             listeners[i].fn !== fn\n          || (once && !listeners[i].once)\n          || (context && listeners[i].context !== context)\n        ) {\n          events.push(listeners[i]);\n        }\n      }\n    }\n  }\n\n  //\n  // Reset the array, or remove it completely if we have no more listeners.\n  //\n  if (events.length) {\n    this._events[evt] = events.length === 1 ? events[0] : events;\n  } else {\n    delete this._events[evt];\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners or only the listeners for the specified event.\n *\n * @param {String} event The event want to remove all listeners for.\n * @api public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  if (!this._events) return this;\n\n  if (event) delete this._events[prefix ? prefix + event : event];\n  else this._events = prefix ? {} : Object.create(null);\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// This function doesn't apply anymore.\n//\nEventEmitter.prototype.setMaxListeners = function setMaxListeners() {\n  return this;\n};\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n"]}